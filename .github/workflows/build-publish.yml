# This workflows will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

name: Release plugp100

on:
  release:
    types: [published]
  push:
    branches:
      - fix/manylinux
#    tags:
#      - v*.*.*

jobs:
#  build_vendoring_wheels:
#    if: ${{ startsWith(github.ref, 'refs/tags/v') }}
#    runs-on: ubuntu-latest
#    name: Build on ${{ matrix.platform }} with ${{ matrix.python }}
#
#    strategy:
#      matrix:
#        platform:
#          - manylinux2014_aarch64
#          - musllinux_1_1_aarch64
#          - manylinux2014_armv7l
#        python: [ python3.9, python3.10 ]
#
#    steps:
#      - name: Check out repository
#        uses: actions/checkout@v3
#      - name: Build wheels for ${{ matrix.python }} on ${{ matrix.platform }}
#        uses: ./.github/actions/python-on-arch
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          arch: ${{ matrix.platform }}
#          python: ${{ matrix.python }}
#          run: |
#            ${{ matrix.python }} --version
#            echo "Generate vendoring wheel..."
#            ${{ matrix.python }} build_tools/build_vendoring.py ./plugp100/_vendor ./.cache-pip
#            echo "Generate library wheel with the right platform name"
#            ${{ matrix.python }} build_tools/build_platform_wheel.py ./plugp100/_vendor requirements.txt
#            ${{ matrix.python }} build_tools/rename_wheels.py ${{ matrix.platform }}
#      - name: "Upload generated wheel for ${{ matrix.python }} ${{ matrix.platform }}"
#        uses: actions/upload-artifact@v3
#        with:
#          name: wheel
#          path: dist/*


  publish_pypi:
    if: ${{ startsWith(github.ref, 'refs/tags/v') }}
    name: Publish to PyPi
    runs-on: ubuntu-latest
#    needs: [ build_vendoring_wheels ]

    steps:
      - uses: actions/checkout@v4.1.1
#      - name: "Retrieve compiled requirements"
#        uses: actions/download-artifact@v3
#        with:
#          name: wheel
#          path: ./dist
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine
      - name: Generating Any and Source Distribution
        run: |
          python setup.py sdist bdist_wheel
          ls -R
      - name: Publish source distribution to PyPi
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          twine upload dist/*